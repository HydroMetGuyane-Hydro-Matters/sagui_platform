version: "3.7"

secrets:
  hydroweb_user:
    file: ./secrets-prod/hydroweb_user.txt
  hydroweb_password:
    file: ./secrets-prod/hydroweb_password.txt
  pg_postgres_password:
    file: secrets-prod/pg_postgres_password.txt
  django_env:
    file: secrets-prod/django_env.txt
  django_superuser_password:
    file: secrets-prod/django_superuser_password.txt

services:
  # start the scheduler as a ghost container (does nothing). It will make it easier to
  # call from a cron task (using exec, we have the whole process running in the console
  # as opposed to start which was restarting the task in the background
#  scheduler:
#    restart: "no"
#    image: pigeosolutions/hyfaa-scheduler:4.3
#    command: ["tail", "-f", "/dev/null"]
#    user: $USER_ID:$GROUP_ID
#    build: ./hyfaa-scheduler
#    secrets:
#      - hydroweb_user
#      - hydroweb_password
#    environment:
#      - HYDROWEB_USER_FILE=/run/secrets/hydroweb_user
#      - HYDROWEB_PASSWORD_FILE=/run/secrets/hydroweb_password
#    volumes:
#      - ./hyfaa-scheduler/work_configurations/operational_guyane_gsmap:/work
#    networks:
#      - internal

#  backend:
#    volumes:
##      - django_static_files:/static
#      - ./sagui_backend/sample_data:/sample_data
#      - ./nc_data:/nc_data
#    networks:
#      - internal
#      - traefik-proxy_proxy_network

  pg-tileserv:
#    networks:
#      - internal
#      - traefik-proxy_proxy_network
    env_file:
      - secrets-prod/pg_tileserv.env

  varnish:
    networks:
      - internal
      - traefik-proxy_proxy_network
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-proxy_proxy_network"
      - "traefik.http.routers.varnish.tls=true"
      - "traefik.http.routers.varnish.entrypoints=websecure"
      - "traefik.http.routers.varnish.rule=Host(`localhost`) || Host(`sagui.hydro-matters.fr`)"
      - "traefik.http.routers.varnish.tls.certresolver=letsEncrypt"
      - "traefik.http.routers.varnish.tls.domains[0].main=sagui.hydro-matters.fr"


networks:
  internal:
  traefik-proxy_proxy_network:
    external: true
